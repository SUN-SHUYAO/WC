#include <cstdio>
#include <iostream>
using namespace std;
#include <algorithm>
#include <cstring>
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<io.h>
void zifu(FILE *fi1);
void danci(FILE *fi1);
void juzi(FILE *fi1);
void hang(FILE *fi1);
void zhu(FILE *fi1);
void kong(FILE *fi1);
int main()
{
    string command, filename;
	printf("请输入指令:\n");
	char c;
	while(scanf("%c", &c))
    {
        command.clear(); 
		filename.clear();
        string s1 ="wc.exe -c ";
        string s2 ="wc.exe -w ";
        string s3 ="wc.exe -l "; /*注释行不算一句话*/
        string s4 ="wc.exe -h ";
        string s5 ="wc.exe -z ";
        string s6 ="wc.exe -k ";
        char fn[100];
        FILE *fi1;

        if(c!='\n') command+=c;
        while(scanf("%c", &c))
		{
            if(c=='\n') 
			break;
            command+=c;
        }
        filename=command.substr(10, command.size()-10);
        for(int i=0; i<filename.size(); i++)
            fn[i] = filename[i];
        fn[filename.size()]='\0';
        fi1 = fopen(fn, "r");

        s1+=filename; s2+=filename; s3+=filename; s4+=filename; s5+=filename; s6+=filename;
        while(1)
        {

            if(command==s1)
            {
                zifu(fi1);
                break;
            }
            if(command==s2)
            {
                danci(fi1);
                break;
            }
            if(command==s3)
            {
                juzi(fi1);
                break;
            }
            if(command==s4)
            {
                hang(fi1);
                break;
            }
            if(command==s5)
            {
                zhu(fi1);
                break;
            }
            if(command==s6)
            {
                kong(fi1);
                break;
            }
            if(command!=s1 && command!=s2  && command!=s3 && command!=s4 && command!=s5 && command!=s6 )
            {
                    printf("请按照给定命令输入:\n");
                    command.clear();
                    while(scanf("%c", &c)){
                        if(c=='\n') break;
                        command+=c;
                    }
            }
        }
        fclose(fi1);
	}
}

void zifu(FILE *fi1)
{
	int bits;
	bits=0;
	char c;
	while((c=fgetc(fi1)) != EOF)
	{
		fputc(c,stdout);
		bits++;
	}
	printf("\n字符数：");
	printf("%d\n",bits);
}

void juzi(FILE *fi1)
{
	int sent;
	sent=0;
	char c;
	while((c=fgetc(fi1)) != EOF)
	{
		fputc(c,stdout);
		if(c=='.')
		{
			sent++;
		}
	}
	printf("\n句子数：");
	printf("%d\n",sent);
}

void danci(FILE *fi1)
{
	int words,flag,sum;
	sum=0;
	words=0;
	flag=0;
	char c;
	while((c=fgetc(fi1)) != EOF)
	{
		fputc(c,stdout);
		if(c=='\n')
		{
			sum++;
		}
		if(c!='\n'||c!=' '||c!='.'||c!='/'||c!='*')
		{
			flag++;
		}
		if((flag!=0) && ( (c=='\n') || (c=='.')||(c==' ')) )
		{
				flag=0;
				words++;
		}
	}
	printf("\n单词数：");
	printf("%d\n",words-sum);
}

void hang(FILE *fi1)
{
	int h=1;
	char c;
	while((c=fgetc(fi1)) != EOF)
	{
		fputc(c,stdout);
		if(c=='\n')
		{
			h++;
		}
	}
	printf("\n行数：");
	printf("%d\n",h);
}

void zhu(FILE *fi1)
{
	int flag=0;
	int exp=0;
	char c;
	while((c=fgetc(fi1)) != EOF)
	{
		fputc(c,stdout);
		if(c!='\n')
		{
			if(c=='/'||c=='*')
			{
				flag++;
			}
		}
		else
		{
			if(flag==4)
			{
				exp++;
				flag=0;
			}
		}
	}
	printf("\n注释行数：");
	printf("%d\n",exp);
}

void kong(FILE *fi1)
{
	int flag=1;   /*解决第一行为空的问题*/
	int null=0;
	char c;
	while((c=fgetc(fi1)) != EOF)
	{
		fputc(c,stdout);
		if(c=='\n')
		{
			flag++;
			if(flag>=2)
			{
				null++;
			}
		}
		else
		{
			flag=0;
		}
	}
	printf("\n空行数：");
	if(flag>=2)
	{
		printf("%d\n",null+1);
	}
	else
	{
		printf("%d\n",null);
	}
}
